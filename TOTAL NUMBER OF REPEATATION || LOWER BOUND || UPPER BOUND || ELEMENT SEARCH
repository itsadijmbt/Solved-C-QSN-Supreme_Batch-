
QSM:
Total number of repeatations
lower bound
upper bound
find element and return index


// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;
int bs_lb(int arr[], int n, int target)
{
    int m=0 , e=n-1, s=0 , index=0;
    m=s+(e-s)/2;

       while(s<=e)
    {
        m=s+(e-s)/2;
        
        if(arr[m]==target) {
            cout<<m<<"\n";
            index=m; 
            e=m-1;
        }
        else if(target<arr[m]) {e=m-1;}
        
        else if(target>arr[m]){ s=m+1;}
    }

        return index;
}

int bs_ub(int arr[], int  n, int target)
{
    int m=0 , e=n-1, s=0 , index=0;
    m=s+(e-s)/2;
    
    while(s<=e)
    {
        if(arr[m]==target) {
            index=m; 
            cout<<m<<"\n";
            s=m+1;
        }
        
      else if(target<arr[m]) {e=m-1;}
        
        else if(target>arr[m]){ s=m+1;}
    
            m=s+(e-s)/2;
    }
    return index;
}

int bs_fd(int arr[], int  n, int target)
{
    int m=0 , e=n-1, s=0 ;
    m=s+(e-s)/2;
    
    while(s<=e)
    {
    
        if(arr[m]==target) {
           return m; 
        }
        else if(target<arr[m]) {e=m-1;}
        
        else if(target>arr[m]){ s=m+1;}
    
               m=s+(e-s)/2; 
    }
  
    return -1;
}

int main() {
  
  

  int arr[10]={1,2,3,4,5,6,7,7,8,8};
  int target=0;
  int n=10;
  cout<<"ENTER TARGET\n";
  cin>>target;


  int lb=bs_lb(arr, n , target);
  int ub=bs_ub(arr, n , target);
  int find=bs_fd(arr, n, target);
  int total_occurance=(ub-lb)+1;
  cout<<"PRESENT AT"<<find<<"\n";
  cout<<"TOTAL OCCURANCE OF TAGET :\n"<<total_occurance;
  
 
    
    return 0;
}
